Собственно сама задача:

Скрипт на jmeter должен выполнять различные поисковые запросы в Яндексе на основе подготовленных тестовых данных

Предусловие cценария:
1)	Поисковые запросы должны создаваться на основе xml-ки https://www.w3schools.com/xml/plant_catalog.xml
2)	Скрипт Jmeter должен вызывать на исполнение jar файл, jar получит xml-ку https://www.w3schools.com/xml/plant_catalog.xml, и сформирует свой поисковый запрос для каждого потока в ThreadGroup. т.е. если у нас запускается 1 поток, то у нас будет 1 файл с одним запросом, если у нас запускается 5 потоков, то у нас будет 5 файлов в каждом файле один запрос.
3)	Запрос должен получаться путем конкатенации COMMON и BOTANICAL для растения.
4)	Запрос должен быть сохранен в отдельный файл. Кол-во отдельных файлов равно кол-ву потоков
5)	Растения для запроса из файла выбираются рандомно. 

Шаги сценария:
1)	Открываем https://yandex.ru/
2)	Выполняем запрос на основе данных из предусловия

Ограничения:
1)	Каждый новый поток стартует через 1 секунду после предыдущего, продолжительность выполнения скрипта 1 минута.
2)	Данные xml в jar файле должны обрабатываться путем Unmarshalling.
3)	jar файл должен быть создан с помощью maven-assembly-plugin
4)	Кол-во сгенерированных файлов запросов, которые создает jar-ник, должны регулироваться с помощью ключа. Значение ключа должно задаваться в User Defined Variables.

!!!! С поиском в яндекс не удалось сделать, теперь там защита от автоматических скриптов - очень часто капча всплывает, с google такая же ситуация. 
Поэтому для скрипта использовался поисковик yahoo.com суть одна и таже.


По итогу было реализовано 2 скрипта:
Первый по задаиню с созданием файлов, через дополнительный jar файл, который подключается к тесту. Название скрипта: testScript01.jmx, jar файл называется jmeterUtils01.jar, должен быть в той же папке, что и скрипт, иначе надо будет открыть скрипт и поменять поуть до jar файла.
!!!!!!!!!! Очень важно, для успешного тестирования нужно создать папку out в <home jmeter>/bin - в это папке будут создаваться файлы. конечный путь будет таким для фалов с поисковыми запросами: <home jmeter>/bin/out

Второй с использованием самописного сервиса, который отдает рандомное растение. Не стал сервис собирать в war, достоточно просто открыть проект в Idea и запустить, в самом тесте используется запрос GET http://localhost:8080/plant который возвращает растение рандомное для каждого обращения к сервису, получается используется разное растения для каждого азпроса поиска, а не так как в первом решении, там поисковых растений будет столько же, сколько создано файлов. Единственное что тут придется кол-во тредов и время их запуска задавать руками, в первом решении он задается переменной. Название скрипта testScript02.jmx



